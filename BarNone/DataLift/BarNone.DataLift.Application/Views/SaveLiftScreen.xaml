<UserControl x:Class="BarNone.DataLift.UI.Views.SaveLiftScreen"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BarNone.DataLift.UI.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validation="clr-namespace:BarNone.DataLift.UI.Validation"
             xmlns:vms="clr-namespace:BarNone.DataLift.UI.ViewModels"
             mc:Ignorable="d" 
            >
    <UserControl.Resources>
        <vms:SaveLiftVM x:Key="vm"/>
        <Style x:Key="MaterialDesignFlatButton" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="Auto" />
        </Style>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Source="{StaticResource vm}"/>
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <materialDesign:Card Grid.Column="0" Grid.Row="0" Margin="0 0 5 0" VerticalAlignment="Stretch"  Padding="10">
            <ListView ItemsSource="{Binding LiftIntervals}" SelectedItem="{Binding SelectedLift}" HorizontalContentAlignment="Stretch">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0 0 0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0,0,10,0" 
                                      materialDesign:HintAssist.Hint="Lift Name" VerticalAlignment="Bottom">
                                <TextBox.Text>
                                    <Binding Path="LiftName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validation:LiftNameValidtionRule ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <ComboBox Grid.Column="1" Margin="0,0,10,0" ItemsSource="{Binding LiftTypeList}" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Lift Type"
                                      materialDesign:HintAssist.HintOpacity=".26"
                                      SelectedItem="{Binding LiftType}"  VerticalAlignment="Bottom" />
                            <ComboBox Grid.Column="2" Margin="0,0,10,0" ItemsSource="{Binding LiftFolderList}" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Lift Folder"
                                      materialDesign:HintAssist.HintOpacity=".26"
                                      SelectedItem="{Binding LiftFolder}"  VerticalAlignment="Bottom" />
                            <Button Grid.Column="3" Style="{StaticResource MaterialDesignFlatButton}" 
                                    CommandParameter="{Binding}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.DeleteSelectedRecording}">
                                <materialDesign:PackIcon Foreground="{StaticResource PrimaryHueMidBrush}" Kind="Delete" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListView>
        </materialDesign:Card>
        <materialDesign:Card Grid.Column="1" Grid.Row="0" Margin="5 0 0 0" Padding="10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <TextBox
                     materialDesign:HintAssist.Hint="Search" Margin="0 0 0 10" Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>
                    <ListBox ItemsSource="{Binding DisplayedUsers}" SelectionMode="Multiple">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignToolToggleListBoxItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSeletcted}"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <!--Selector.SelectionChanged="{Binding IsSeletcted}"-->
                            <DataTemplate>
                                <Border x:Name="Border" Padding="8" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource MaterialDesignDivider}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="5*"/>
                                        </Grid.ColumnDefinitions>
                                        <!--TODO Add IsChecked-->
                                        <ToggleButton VerticalAlignment="Center" Grid.Column="0" IsChecked="{Binding IsSeletcted}"
                                                  Style="{StaticResource MaterialDesignActionLightToggleButton}"
                                                  Content="{Binding Code}" />
                                        <StackPanel Margin="8 0 0 0" Grid.Column="1">
                                            <TextBlock FontWeight="Bold" Text="{Binding UserName}" />
                                            <TextBlock Text="{Binding Name}" />
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <!--<DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSeletcted}" Value="True" >
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>-->
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
                <Button Grid.Row="1" Content="Send Lifts" Command="{Binding SendLifts}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Margin="10" Padding="25 0 25 0" FontSize="12" />
            </Grid>
        </materialDesign:Card>
    </Grid>
</UserControl>
