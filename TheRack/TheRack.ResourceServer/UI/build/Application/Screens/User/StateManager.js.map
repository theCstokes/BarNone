{"version":3,"sources":["../src/Application/Screens/User/StateManager.ts"],"names":[],"mappings":";;;;;;;;;;;IAMA;KAGC;IAHD,sBAGC;IAED,kBAA0B,SAAQ,mCAAuB;QACxD,YAAmB,MAAiB;YACnC,KAAK,CAAC,MAAM,EAAE,IAAI,KAAK,EAAE,CAAC,CAAC;YAGZ,eAAU,GAAG,mBAAS;iBACpC,MAAM,CAAQ,IAAI,EAAE,IAAI,CAAC;iBACzB,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI;gBACrB,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC1B,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAE/C,MAAM,CAAC,SAAS,CAAC;YAClB,CAAC,CAAC,CAAC;YAEY,oBAAe,GAAG,mBAAS;iBACzC,MAAM,CAAQ,IAAI,CAAC;iBACnB,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI;gBACrB,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;gBAE9B,MAAM,CAAC,SAAS,CAAC;YAClB,CAAC,CAAC,CAAC;QAnBJ,CAAC;QAqBY,IAAI;;gBAChB,IAAI,IAAI,GAAG,MAAM,qBAAW,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBAC1C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;SAAA;KACD;IA5BD,oCA4BC","file":"StateManager.js","sourcesContent":["import { BaseStateManager } from \"Vee/StateManager/BaseStateManager\";\r\nimport StateBind from \"Vee/StateManager/StateBind\";\r\nimport AppScreen from \"Vee/Screen/AppScreen\";\r\nimport DataManager from \"Application/Data/DataManager\";\r\nimport User from \"Application/Data/Models/User/User\";\r\n\r\nexport class State {\r\n\tpublic userList: User[]\r\n\tpublic currentId: number;\r\n}\r\n\r\nexport class StateManager extends BaseStateManager<State> {\r\n\tpublic constructor(screen: AppScreen) {\r\n\t\tsuper(screen, new State());\r\n\t}\r\n\r\n\tpublic readonly resetState = StateBind\r\n\t\t.create<State>(this, true)\r\n\t\t.onAction((state, data) => {\r\n\t\t\tvar nextState = Utils.clone(state);\r\n\t\t\tnextState.userList = data;\r\n\t\t\tnextState.currentId = nextState.userList[0].id;\r\n\r\n\t\t\treturn nextState;\r\n\t\t});\r\n\r\n\tpublic readonly selectionChange = StateBind\r\n\t\t.create<State>(this)\r\n\t\t.onAction((state, data) => {\r\n\t\t\tvar nextState = Utils.clone(state);\r\n\t\t\tnextState.currentId = data.id;\r\n\r\n\t\t\treturn nextState;\r\n\t\t});\r\n\r\n\tpublic async init(): Promise<void> {\r\n\t\tvar data = await DataManager.Users.load();\r\n\t\tthis.resetState.trigger(data);\r\n\t}\r\n}"]}