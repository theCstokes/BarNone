{"version":3,"sources":["../src/Vee/Vee.ts"],"names":[],"mappings":"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","file":"Vee.js","sourcesContent":["import { IUtils } from 'Vee/Vee.config';\r\nimport AppScreen from \"Vee/Screen/AppScreen\";\r\nimport Core from \"Vee/Elements/Core/Core\";\r\n\r\ndeclare global {\r\n\tconst Utils: IUtils\r\n}\r\n\r\nclass ScreenMountPoint {\r\n\tpublic element: HTMLElement;\r\n\tpublic isUsed: boolean;\r\n\tpublic screen?: AppScreen;\r\n}\r\n\r\nexport default class Vee {\r\n\tprivate static _base: HTMLElement;\r\n\tprivate static _screens: AppScreen[];\r\n\tprivate static _screenMounts: ScreenMountPoint[];\r\n\r\n\tpublic static start(): void {\r\n\t\tvar base = document.getElementById(\"app\");\r\n\t\tif (base !== null) {\r\n\t\t\tVee._base = base;\r\n\t\t}\r\n\t\tVee._screens = [];\r\n\t\tVee._screenMounts = [];\r\n\t}\r\n\r\n\tpublic static get base(): HTMLElement {\r\n\t\treturn this._base;\r\n\t}\r\n\r\n\tpublic static async push(AppScreenType: { new(): AppScreen }, data?: any): Promise<void> {\r\n\t\tvar screen = new AppScreenType();\r\n\r\n\t\tvar parent = this._base;\r\n\t\tif (this._screenMounts.length > 0) {\r\n\t\t\tvar screenMount = this._screenMounts.find(screenMount => {\r\n\t\t\t\treturn (screenMount.isUsed === false);\r\n\t\t\t});\r\n\t\t\tif (screenMount === undefined) {\r\n\t\t\t\tconsole.warn(\"Could not find screen mounting point. Defaulting to base.\");\r\n\t\t\t} else {\r\n\t\t\t\tparent = screenMount.element;\r\n\t\t\t\tscreenMount.isUsed = true;\r\n\t\t\t\tscreenMount.screen = screen;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar results = await Core.inflate(parent, screen.screenContent);\r\n\r\n\t\tthis._screenMounts = this._screenMounts.concat(results.mountingPoints.map(element => {\r\n\t\t\tvar screenMount = new ScreenMountPoint();\r\n\t\t\tscreenMount.element = element;\r\n\t\t\tscreenMount.isUsed = false;\r\n\t\t\t// screenMount.screen = screen;\r\n\t\t\treturn screenMount;\r\n\t\t}));\r\n\r\n\t\tfor(var key in results.map) {\r\n\t\t\tif (!results.map.hasOwnProperty(key)) continue;\r\n\t\t\tscreen.view[key] = results.map[key];\r\n\t\t}\r\n\t\tscreen.screenControl = results.map.screenControl;\r\n\r\n\t\tVee._screens.push(screen);\r\n\r\n\t\tscreen.trigger(\"onShow\", data);\r\n\t}\r\n\r\n\tpublic static pop(): void {\r\n\t\tvar lastScreen = Vee._screens.pop();\r\n\t\tif (lastScreen === undefined) return;\r\n\t\tthis._screenMounts = this._screenMounts.map((mount) => {\r\n\t\t\tif (mount.screen === lastScreen) {\r\n\t\t\t\tmount.isUsed = false;\r\n\t\t\t\tmount.screen = undefined;\r\n\t\t\t\treturn mount;\r\n\t\t\t}\r\n\t\t\treturn mount;\r\n\t\t});\r\n\t\tlastScreen.screenControl.destroy();\r\n\t}\r\n}"]}