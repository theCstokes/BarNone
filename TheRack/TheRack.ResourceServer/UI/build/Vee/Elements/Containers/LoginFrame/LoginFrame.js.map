{"version":3,"sources":["../src/Vee/Elements/Containers/LoginFrame/LoginFrame.ts"],"names":[],"mappings":";;;IAIA,gBAAgC,SAAQ,6BAAa;QAMjD,YAAY,MAAmB;YAC3B,KAAK,CAAC,MAAM,CAAC,CAAC;YACd,cAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;YAE/C,IAAI,CAAC,gBAAgB,GAAG,cAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,YAAY,CAAqB,CAAC;YAE3F,IAAI,CAAC,QAAQ,GAAG,cAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1D,CAAC;QAED,IAAW,OAAO,CAAC,KAAY;YAC3B,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC9C,CAAC;QACD,IAAW,OAAO;YACd,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC9C,CAAC;QAED,IAAW,UAAU;YACjB,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC;QACvC,CAAC;QACD,IAAW,UAAU,CAAC,KAAa;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,KAAK,KAAK,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACpC,IAAI,CAAC,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAC5D,CAAC;QACL,CAAC;QAEM,gBAAgB;YACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;QACM,gBAAgB;YACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;QACM,aAAa;YAChB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;KACJ;IA1CD,6BA0CC","file":"LoginFrame.js","sourcesContent":["import { BaseContainer } from \"Vee/Elements/Core/BaseContainer/BaseContainer\";\r\nimport Core from \"Vee/Elements/Core/Core\";\r\nimport { IScreen } from \"Vee/Elements/Core/IScreen\";\r\n\r\nexport default class LoginFrame extends BaseContainer {\r\n    private _backgroundImage: HTMLImageElement;\r\n    private _content: HTMLElement;\r\n\r\n    private _backgroundImageSource: string;\r\n    \r\n    constructor(parent: HTMLElement) {\r\n        super(parent);\r\n        Core.addClass(this.element, \"Vee-Login-Frame\");\r\n\r\n        this._backgroundImage = Core.create(\"img\", this.element, \"Background\") as HTMLImageElement;\r\n\r\n        this._content = Core.create(\"div\", this.element, \"Content\");\r\n        this.linkComponentContainer(\"content\", this._content);\r\n    }\r\n    \r\n    public set content(value: any[]) {\r\n        this.setScreenContainer(\"content\", value);\r\n    }\r\n    public get content(): any[] {\r\n        return this.getScreenContainer(\"content\");\r\n    }\r\n\r\n    public get background(): string {\r\n        return this._backgroundImageSource;\r\n    }\r\n    public set background(value: string) {\r\n        if (this._backgroundImageSource !== value) {\r\n            this._backgroundImageSource = value;\r\n            this._backgroundImage.src = this._backgroundImageSource;\r\n        }\r\n    }\r\n    \r\n    public onModifiedChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public onReadonlyChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public onErrorChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}"]}