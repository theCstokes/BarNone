{"version":3,"sources":["../src/Vee/Elements/Containers/PartitionLayout/PartitionLayout.ts"],"names":[],"mappings":";;;IAGA,qBAAqC,SAAQ,6BAAa;QAKtD,YAAmB,MAAmB;YAClC,KAAK,CAAE,MAAM,CAAC,CAAC;YACf,cAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAC;YAErD,IAAI,CAAC,SAAS,GAAG,cAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAC/D,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAExD,IAAI,CAAC,OAAO,GAAG,cAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAE1D,IAAI,CAAC,UAAU,GAAG,cAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACjE,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3D,CAAC;QAED,IAAW,QAAQ,CAAC,KAAY;YAC5B,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC;QACD,IAAW,QAAQ;YACf,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAClD,CAAC;QAED,IAAW,SAAS,CAAC,KAAY;YAC7B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC;QACD,IAAW,SAAS;YAChB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QAChD,CAAC;QAEM,gBAAgB;YACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;QACM,gBAAgB;YACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;QACM,aAAa;YAChB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;KACJ;IAzCD,kCAyCC","file":"PartitionLayout.js","sourcesContent":["import { BaseContainer } from \"Vee/Elements/Core/BaseContainer/BaseContainer\";\r\nimport Core from \"Vee/Elements/Core/Core\";\r\n\r\nexport default class PartitionLayout extends BaseContainer {\r\n    private _leftSide: HTMLElement;\r\n    private _holder: HTMLElement;\r\n    private _rightSide: HTMLElement;\r\n    \r\n    public constructor(parent: HTMLElement) {\r\n        super (parent);\r\n        Core.addClass(this.element, \"UEye-Partition-Layout\");\r\n        \r\n        this._leftSide = Core.create(\"div\", this.element, \"Left-Side\");\r\n        this.linkComponentContainer(\"leftSide\", this._leftSide);\r\n\r\n        this._holder = Core.create(\"div\", this.element, \"Holder\");\r\n\r\n        this._rightSide = Core.create(\"div\", this._holder, \"Right-Side\");\r\n        this.linkScreenContainer(\"rightSide\", this._rightSide);\r\n    }\r\n    \r\n    public set leftSide(value: any[]) {\r\n        this.setComponentContainer(\"leftSide\", value);\r\n    }\r\n    public get leftSide(): any[] {\r\n        return this.getComponentContainer(\"leftSide\");\r\n    }\r\n\r\n    public set rightSide(value: any[]) {\r\n        this.setScreenContainer(\"rightSide\", value);\r\n    }\r\n    public get rightSide(): any[] {\r\n        return this.getScreenContainer(\"rightSide\");\r\n    }\r\n\r\n    public onModifiedChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public onReadonlyChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public onErrorChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}"]}