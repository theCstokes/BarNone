{"version":3,"sources":["../src/Vee/Elements/Components/List/List.ts"],"names":[],"mappings":";;;;;;;;;;;IAIA,cAA8B,SAAQ,6BAAa;QAM/C,YAAmB,MAAmB;YAClC,KAAK,CAAC,MAAM,CAAC,CAAC;YACd,cAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAEzC,IAAI,CAAC,YAAY,GAAG,cAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACxE,CAAC;QAED,IAAW,KAAK,CAAC,KAAY;YACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QACD,IAAW,KAAK;YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QAED,IAAW,KAAK,CAAC,KAAU;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,CAAC;QACD,IAAW,KAAK;YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QAEO,YAAY;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAM,OAAO;gBAC7B,IAAI,WAAW,GAAG,cAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;gBAClE,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;gBACnF,kCAAkC;YACtC,CAAC,CAAA,CAAC,CAAC;QACP,CAAC;QAEM,gBAAgB;YACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;QACM,gBAAgB;YACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;QACM,aAAa;YAChB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC;KACJ;IA7CD,2BA6CC","file":"List.js","sourcesContent":["import { BaseComponent } from \"Vee/Elements/Core/BaseComponent/BaseComponent\";\r\nimport Core from \"Vee/Elements/Core/Core\";\r\nimport ViewInflater from \"Vee/Elements/Core/ViewInflater\";\r\n\r\nexport default class UEyeList extends BaseComponent {\r\n    private _elementList: HTMLElement;\r\n\r\n    private _items: any[]\r\n    private _style: any;\r\n\r\n    public constructor(parent: HTMLElement) {\r\n        super(parent);\r\n        Core.addClass(this.element, \"UEye-List\");\r\n\r\n        this._elementList = Core.create(\"ul\", this.element, \"Element-List\");\r\n    }\r\n\r\n    public set items(value: any[]) {\r\n        this._items = value;\r\n        this.refreshItems();\r\n    }\r\n    public get items(): any[] {\r\n        return this._items;\r\n    }\r\n\r\n    public set style(value: any) {\r\n        this._style = value;\r\n    }\r\n    public get style(): any {\r\n        return this._style;\r\n    }\r\n    \r\n    private refreshItems() {\r\n        this._items.forEach(async element => {\r\n            var listElement = Core.create(\"li\", this._elementList, \"Element\");\r\n            var instance = await ViewInflater.InflateByPath(this._style, listElement, element);\r\n            // TODO - add events to component.\r\n        });\r\n    }\r\n\r\n    public onModifiedChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public onReadonlyChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    public onErrorChange(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}"]}