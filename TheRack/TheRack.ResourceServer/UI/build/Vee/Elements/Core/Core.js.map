{"version":3,"sources":["../src/Vee/Elements/Core/Core.ts"],"names":[],"mappings":";;;;;;;;;;;IAEA;QACQ,MAAM,CAAC,MAAM,CAAC,IAAY,EAAE,MAAmB,EAAE,GAAG,UAAoB;YAC9E,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,CAAC;YACtC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,CAAC,OAAO,CAAC;QAChB,CAAC;QAEM,MAAM,CAAC,QAAQ,CAAC,OAAoB,EAAE,GAAG,UAAoB;YACnE,UAAU,CAAC,OAAO,CAAC,IAAI;gBACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACrC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI;oBAC3B,IAAI,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;oBAC1B,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAC/B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAClC,OAAO,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACjC,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,MAAM,CAAC,WAAW,CAAC,OAAoB,EAAE,GAAG,UAAoB;YACtE,UAAU,CAAC,OAAO,CAAC,IAAI;gBACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACrC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI;oBAC3B,IAAI,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;oBAC1B,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAC/B,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,MAAM,CAAC,YAAY,CAAC,OAAoB,EAAE,QAAgB,EAAE,QAAgB;YAClF,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAClC,CAAC;QAEM,MAAM,CAAC,iBAAiB,CAAC,OAAoB,EAAE,QAAkB,EAAE,QAAkB;YAC3F,QAAQ,CAAC,OAAO,CAAC,UAAU,UAAU;gBACpC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,OAAO,CAAC,UAAU,UAAU;gBACpC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,MAAM,CAAO,OAAO,CAAC,MAAmB,EAAE,UAAiB;;gBAC3D,IAAI,GAAG,GAAyB,EAAE,CAAC;gBACnC,IAAI,cAAc,GAAkB,EAAE,CAAC;gBACvC,MAAM,sBAAY,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;gBACpE,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC;YACxD,CAAC;SAAA;KACJ;IArDD,uBAqDC","file":"Core.js","sourcesContent":["import ViewInflater from \"Vee/Elements/Core/ViewInflater\";\r\n\r\nexport default class Core {\r\n\tpublic static create(type: string, parent: HTMLElement, ...cssClasses: string[]): HTMLElement | HTMLInputElement {\r\n\t\tvar element = document.createElement(type);\r\n\t\tCore.addClass(element, ...cssClasses);\r\n\t\tparent.appendChild(element);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tpublic static addClass(element: HTMLElement, ...cssClasses: string[]): void {\r\n\t\tcssClasses.forEach(name => {\r\n\t\t\tvar items = name.match(/\\S+/g) || [];\r\n\t\t\titems.forEach(function (item) {\r\n\t\t\t\tvar itemName = item + \" \";\r\n\t\t\t\tvar reg = new RegExp(itemName);\r\n\t\t\t\tif (!reg.test(element.className)) {\r\n\t\t\t\t\telement.className += (itemName);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static removeClass(element: HTMLElement, ...cssClasses: string[]): void {\r\n\t\tcssClasses.forEach(name => {\r\n\t\t\tvar items = name.match(/\\S+/g) || [];\r\n\t\t\titems.forEach(function (item) {\r\n\t\t\t\tvar itemName = item + \" \";\r\n\t\t\t\tvar reg = new RegExp(itemName);\r\n\t\t\t\telement.className = element.className.replace(reg, \"\");\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static replaceClass(element: HTMLElement, original: string, cssClass: string): void {\r\n\t\tCore.removeClass(element, original);\r\n\t\tCore.addClass(element, cssClass);\r\n\t}\r\n\r\n\tpublic static replaceAllClasses(element: HTMLElement, original: string[], cssClass: string[]): void {\r\n\t\toriginal.forEach(function (styleClass) {\r\n\t\t\tCore.removeClass(element, styleClass);\r\n\t\t});\r\n\r\n\t\tcssClass.forEach(function (styleClass) {\r\n\t\t\tCore.addClass(element, styleClass);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static async inflate(parent: HTMLElement, configList: any[]): Promise<{ map: { [id:string]: any }, mountingPoints: HTMLElement[] }> {\r\n        var map: { [id:string]: any } = {};\r\n        var mountingPoints: HTMLElement[] = [];\r\n        await ViewInflater.inflate(parent, configList, map, mountingPoints);\r\n        return { map: map, mountingPoints: mountingPoints };\r\n    }\r\n}"]}