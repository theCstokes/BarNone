{"version":3,"sources":["../src/Vee/Data/RequestBuilder.ts"],"names":[],"mappings":";;;;;;;;;;;IAEA;QAKC,YAAoB,IAAU,EAAE,KAAa;YAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpB,CAAC;QAEM,MAAM,CAAC,GAAG,CAAC,KAAa;YAC9B,MAAM,CAAC,IAAI,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC;QAEM,MAAM,CAAC,GAAW,EAAE,KAAa;YACvC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAI,KAAK,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEY,OAAO,CAAC,OAAY,IAAI;;gBACpC,MAAM,CAAC,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM;oBAC1C,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;oBAC/B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAExC,GAAG,CAAA,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC9B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;4BAAC,QAAQ,CAAC;wBACjD,GAAG,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC/C,CAAC;oBAED,GAAG,CAAC,MAAM,GAAG;wBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC1B,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gCACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;4BAC3B,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACP,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gCAC7B,MAAM,EAAE,CAAC;4BACV,CAAC;wBACF,CAAC;oBACF,CAAC,CAAC;oBAEF,GAAG,CAAC,OAAO,GAAG;wBACb,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;wBAC7B,MAAM,EAAE,CAAC;oBACV,CAAC,CAAC;oBAEF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;YACJ,CAAC;SAAA;KACD;IAjDD,iCAiDC","file":"RequestBuilder.js","sourcesContent":["type Verb = \"GET\" | \"PUT\" | \"POST\" | \"PATCH\" | \"DELETE\";\r\n\r\nexport default class RequestBuilder {\r\n\tprivate _verb: Verb;\r\n\tprivate _route: string;\r\n\tprivate _headers: { [key: string]: string };\r\n\r\n\tprivate constructor(verb: Verb, route: string) {\r\n\t\tthis._verb = verb;\r\n\t\tthis._route = route;\r\n\t\tthis._headers = {};\r\n\t}\r\n\r\n\tpublic static GET(route: string): RequestBuilder {\r\n\t\treturn new RequestBuilder(\"GET\", route);\r\n\t}\r\n\r\n\tpublic header(key: string, value: string): RequestBuilder {\r\n\t\tthis._headers[key] =  value;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic async execute(data: any = null): Promise<string> {\r\n\t\treturn new Promise<string>((resolve, reject) => {\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(this._verb, this._route, true);\r\n\r\n\t\t\tfor(var key in this._headers) {\r\n\t\t\t\tif (!this._headers.hasOwnProperty(key)) continue;\r\n\t\t\t\txhr.setRequestHeader(key, this._headers[key]);\r\n\t\t\t}\r\n\r\n\t\t\txhr.onload = () => {\r\n\t\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t\t\tresolve(xhr.responseText);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn(xhr.statusText);\r\n\t\t\t\t\t\treject();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.onerror = () => {\r\n\t\t\t\tconsole.warn(xhr.statusText);\r\n\t\t\t\treject();\r\n\t\t\t};\r\n\r\n\t\t\txhr.send(null);\r\n\t\t});\r\n\t}\r\n}"]}