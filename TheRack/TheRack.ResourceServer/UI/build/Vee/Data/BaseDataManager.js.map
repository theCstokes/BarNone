{"version":3,"sources":["../src/Vee/Data/BaseDataManager.ts"],"names":[],"mappings":";;;;;;;;;;;IAEa,QAAA,QAAQ,GAAG,+CAA+C,CAAC;IAC3D,QAAA,WAAW,GAAG,gCAAgC,CAAC;IAE5D;QAOQ,MAAM,CAAO,SAAS,CAAC,QAAgB,EAAE,QAAgB;;gBAE/D,IAAI,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC;gBAEhC,IAAI,IAAI,GAAG,WAAW,GAAG,QAAQ;oBAChC,YAAY,GAAG,QAAQ;oBACvB,cAAc,GAAG,eAAe,CAAC,UAAU;oBAC3C,aAAa,GAAG,eAAe,CAAC,SAAS,CAAC;gBAE3C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAQ,EAAE,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;gBAE3E,IAAI,MAAM,GAAG,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM;oBACjD,IAAI,CAAC,kBAAkB,GAAG;wBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;4BAChD,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BACtD,OAAO,CAAC,IAAI,CAAC,CAAC;wBACf,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;4BACjC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAChB,CAAC;oBACF,CAAC,CAAA;gBACF,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEhB,MAAM,CAAC,MAAM,CAAC;YACf,CAAC;SAAA;QAEM,MAAM,KAAK,IAAI;YACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;;IAnCuB,0BAAU,GAAG,UAAU,CAAC;IACxB,yBAAS,GAAG,kCAAkC,CAAC;IAHxE,0CAsCC;IAED;KAIC;IAJD,oBAIC","file":"BaseDataManager.js","sourcesContent":["import Resource from \"Vee/Data/Resource\";\r\n\r\nexport const AUTH_URL = \"http://localhost:61761/api/v1/authorize/login\";\r\nexport const DEFAULT_URL = \"http://localhost:63202/api/v1/\";\r\n\r\nexport abstract class BaseDataManager {\r\n\r\n\tprivate static readonly grant_type = \"password\";\r\n\tprivate static readonly client_id = \"099153c2625149bc8ecb3e85e03f0022\";\r\n\r\n\tprivate static _auth: Auth;\r\n\r\n\tpublic static async authorize(username: string, password: string): Promise<boolean> {\r\n\r\n\t\tvar http = new XMLHttpRequest();\r\n\r\n\t\tvar args = \"username=\" + username +\r\n\t\t\t\"&password=\" + password +\r\n\t\t\t\"&grant_type=\" + BaseDataManager.grant_type +\r\n\t\t\t\"&client_id=\" + BaseDataManager.client_id;\r\n\r\n\t\thttp.open(\"POST\", AUTH_URL, true);\r\n\t\thttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n\r\n\t\tvar result = new Promise<boolean>((resolve, reject) => {\r\n\t\t\thttp.onreadystatechange = function () {\r\n\t\t\t\tif (http.readyState == 4 && http.status == 200) {\r\n\t\t\t\t\tBaseDataManager._auth = JSON.parse(http.responseText);\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t} else if (http.readyState == 4) {\r\n\t\t\t\t\tresolve(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thttp.send(args);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static get auth(): Auth {\r\n\t\treturn this._auth;\r\n\t}\r\n}\r\n\r\nexport class Auth {\r\n\tpublic access_token: string;\r\n\tpublic expires_in: number;\r\n\tpublic token_type: string;\r\n}"]}