{"version":3,"sources":["../src/Vee/Screen/ScreenBind.ts"],"names":[],"mappings":";;;IASA;QAMC,YAAmB,MAAiB,EAAE,WAAmB;YACxD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAE5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC3B,GAAG,CAAA,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACvC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;wBAAC,QAAQ,CAAC;oBAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,SAAS,CAAC;wBAAC,QAAQ,CAAC;oBACjE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBACzE,CAAC;YACF,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,QAAgB,EAAE,OAAe;gBAC/D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,QAAQ,CAAC,QAAkC;YACjD,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAA;YAC7C,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,OAAO,CAAC,QAAiC;YAC/C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAA;YAC5C,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,QAAQ,CAAC,QAAkC;YACjD,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAA;YAC7C,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,QAAQ,CAAC,QAAkC;YACjD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,MAAM,CAAC,MAAM,CAAS,MAAiB,EAAE,WAAmB;YAClE,MAAM,CAAC,IAAI,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC5C,CAAC;KACD;IA/CD,6BA+CC","file":"ScreenBind.js","sourcesContent":["import { BaseStateManager } from \"Vee/StateManager/BaseStateManager\";\r\nimport AppScreen from \"Vee/Screen/AppScreen\";\r\n\r\ntype OnChangeCallback<TState> = (data: any) => void;\r\ntype OnClickCallback<TState> = () => void;\r\ntype OnSelectCallback<TState> = (data: any) => void;\r\n\r\ntype OnRenderCallback<TState> = (original: TState, current: TState) => void;\r\n\r\nexport default class ScreenBind<TState> {\r\n\tprivate _screen: AppScreen;\r\n\tprivate _controlName: string;\r\n\tprivate _controlCallbacks: { [key: string]: any };\r\n\tprivate _onRenderCallback: OnRenderCallback<TState>;\r\n\r\n\tpublic constructor(screen: AppScreen, controlName: string) {\r\n\t\tthis._screen = screen;\r\n\t\tthis._controlName = controlName;\r\n\t\tthis._controlCallbacks = {};\r\n\r\n\t\tthis._screen.bind(\"onShow\", () => {\r\n\t\t\tfor(var key in this._controlCallbacks) {\r\n\t\t\t\tif (!this._controlCallbacks.hasOwnProperty(key)) continue;\r\n\t\t\t\tif (this._screen.view[this._controlName] === undefined) continue;\r\n\t\t\t\tthis._screen.view[this._controlName][key] = this._controlCallbacks[key];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._screen.bind(\"onRender\", (original: TState, current: TState) => {\r\n\t\t\tthis._onRenderCallback(original, current);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic onChange(callback: OnChangeCallback<TState>): ScreenBind<TState> {\r\n\t\tthis._controlCallbacks[\"onChange\"] = callback\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic onClick(callback: OnClickCallback<TState>): ScreenBind<TState> {\r\n\t\tthis._controlCallbacks[\"onClick\"] = callback\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic onSelect(callback: OnSelectCallback<TState>): ScreenBind<TState> {\r\n\t\tthis._controlCallbacks[\"onSelect\"] = callback\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic onRender(callback: OnRenderCallback<TState>): ScreenBind<TState> {\r\n\t\tthis._onRenderCallback = callback;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic static create<TState>(screen: AppScreen, controlName: string): ScreenBind<TState> {\r\n\t\treturn new ScreenBind(screen, controlName);\r\n\t}\r\n}"]}