{"version":3,"sources":["../src/Vee/Screen/AppScreen.ts"],"names":[],"mappings":";;;IAKA;QAKC,YAAmB,QAAyB;YAC3C,6BAA6B;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACvB,CAAC;QAED,IAAW,IAAI;YACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAED,IAAW,aAAa;YACvB,MAAM,CAAC;gBACN;oBACC,EAAE,EAAE,eAAe;oBACnB,QAAQ,EAAE,sBAAY,CAAC,MAAM;oBAC7B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;iBAO1B;aACD,CAAA;QACF,CAAC;QAED,IAAW,aAAa;YACvB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5B,CAAC;QACD,IAAW,aAAa,CAAC,KAAc;YACtC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,CAAC;QAEM,IAAI,CAAC,IAAY,EAAE,QAAa;YACtC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,CAAC;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;QAEM,OAAO,CAAC,IAAY,EAAE,GAAG,IAAW;YAC1C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACjB,IAAY,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvC,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,QAAa;oBAC5C,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;KACD;IAvDD,4BAuDC","file":"AppScreen.js","sourcesContent":["import { View } from \"Vee/View/View\";\r\nimport Core from \"Vee/Elements/Core/Core\";\r\nimport ControlTypes from \"Vee/ControlTypes\";\r\nimport { IScreen } from \"Vee/Elements/Core/IScreen\";\r\n\r\nexport default class AppScreen {\r\n\tprivate _view: View;\r\n\tprivate _eventBinds: { [key: string]: any };\r\n\tprivate _screenControl: IScreen;\r\n\r\n\tpublic constructor(viewType: { new(): View }) {\r\n\t\t// this._viewType = viewType;\r\n\t\tthis._view = new viewType();\r\n\t\tthis._eventBinds = {};\r\n\t}\r\n\r\n\tpublic get view(): View {\r\n\t\treturn this._view;\r\n\t}\r\n\r\n\tpublic get screenContent(): any[] {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tid: \"screenControl\",\r\n\t\t\t\tinstance: ControlTypes.Screen,\r\n\t\t\t\tcontent: this.view.content,\r\n\t\t\t\t// bottomDock: [\r\n\t\t\t\t// \t{\r\n\t\t\t\t// \t\tinstance: ControlTypes.Button,\r\n\t\t\t\t// \t\ttext: \"Test\"\r\n\t\t\t\t// \t}\r\n\t\t\t\t// ]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n\tpublic get screenControl(): IScreen {\r\n\t\treturn this._screenControl;\r\n\t}\r\n\tpublic set screenControl(value: IScreen) {\r\n\t\tthis._screenControl = value;\r\n\t}\r\n\r\n\tpublic bind(name: string, callback: any): void {\r\n\t\tif (this._eventBinds[name] === undefined) {\r\n\t\t\tthis._eventBinds[name] = [];\r\n\t\t}\r\n\t\tthis._eventBinds[name].push(callback);\r\n\t}\r\n\r\n\tpublic trigger(name: string, ...data: any[]): void {\r\n\t\tif (name in this) {\r\n\t\t\t(this as any)[name].apply(this, data);\r\n\t\t}\r\n\t\tif (this._eventBinds[name] !== undefined) {\r\n\t\t\tthis._eventBinds[name].forEach((callback: any) => {\r\n\t\t\t\tcallback.apply(this, data);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}"]}