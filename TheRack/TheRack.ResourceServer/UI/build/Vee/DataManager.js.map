{"version":3,"sources":["../src/Vee/DataManager.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA;QAQQ,MAAM,CAAO,SAAS,CAAC,QAAgB,EAAE,QAAgB;;gBAE/D,IAAI,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC;gBAEhC,IAAI,IAAI,GAAG,WAAW,GAAG,QAAQ;oBAChC,YAAY,GAAG,QAAQ;oBACvB,cAAc,GAAG,WAAW,CAAC,UAAU;oBACvC,aAAa,GAAG,WAAW,CAAC,SAAS,CAAC;gBAEvC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;gBAC1D,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;gBAE3E,IAAI,MAAM,GAAG,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM;oBACjD,IAAI,CAAC,kBAAkB,GAAG;wBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;4BAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;wBACf,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;4BAChC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAChB,CAAC;oBACF,CAAC,CAAA;gBACF,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEhB,MAAM,CAAC,MAAM,CAAC;YACf,CAAC;SAAA;;IAlCuB,mBAAO,GAAG,+CAA+C,CAAC;IAClF,qFAAqF;IAC7D,sBAAU,GAAG,gCAAgC,CAAC;IAE9C,sBAAU,GAAG,UAAU,CAAC;IACxB,qBAAS,GAAG,kCAAkC,CAAC;IANxE,8BAoCC","file":"DataManager.js","sourcesContent":["export default class DataManager {\r\n\tprivate static readonly authURL = \"http://localhost:61761/api/v1/authorize/login\";\r\n\t// private static readonly authURL = \"http://localhost:63202/api/v1/authorize/login\";\r\n\tprivate static readonly defaultURL = \"http://localhost:63202/api/v1/\";\r\n\r\n\tprivate static readonly grant_type = \"password\";\r\n\tprivate static readonly client_id = \"099153c2625149bc8ecb3e85e03f0022\";\r\n\r\n\tpublic static async authorize(username: string, password: string): Promise<boolean> {\r\n\r\n\t\tvar http = new XMLHttpRequest();\r\n\r\n\t\tvar args = \"username=\" + username +\r\n\t\t\t\"&password=\" + password +\r\n\t\t\t\"&grant_type=\" + DataManager.grant_type +\r\n\t\t\t\"&client_id=\" + DataManager.client_id;\r\n\r\n\t\thttp.open(\"POST\", DataManager.authURL, true);\r\n\t\thttp.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n\t\thttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n\r\n\t\tvar result = new Promise<boolean>((resolve, reject) => {\r\n\t\t\thttp.onreadystatechange = function () {\r\n\t\t\t\tif (http.readyState == 4 && http.status == 200) {\r\n\t\t\t\t\tconsole.log(http.responseText);\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t} else if(http.readyState == 4) {\r\n\t\t\t\t\tresolve(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thttp.send(args);\r\n\r\n\t\treturn result;\r\n\t}\r\n}"]}